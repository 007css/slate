/*============================================================================
  Shopify Canvas
  Copyright 2015 Shopify Inc.
  Authors: Carson Shold @cshold, Steve Bosworth @stevebosworth
  Built with Sass - http://sass-lang.com/

  Some things to know about this file:
    - Sass is compiled on Shopify's server so you don't need to convert it to CSS yourself
    - The output CSS is compressed and comments are removed
    - You cannot use @imports in this file
        * Use grunt or gulp tasks to enable @imports - https://github.com/Shopify/shopify-css-import
    - Helpers variables, mixins, and starter classes are provided. Change as needed.
    - The file is prepped with a CSS reset
    - The font icons are prepared using https://icomoon.io/app
==============================================================================*/

/*============================================================================
  Table of Contents

  #Normalize
  #Color Variables
  #Sizing Variables
  #Typography Variables
  #Z-Index
  #Mixins and Functions
  #Helper Classes
  #Basic Styles
  #Typography
  #Rich Text Editor
  #Links and Buttons
  #Lists
  #Tables
  #Reponsive Tables
  #OOCSS Media Object
  #Images and Iframes
  #Forms
  #Icons
  #Site Nav and Dropdowns
==============================================================================*/

/*============================================================================
  #Normalize

  Based on normalize.css v3.0.2 | MIT License | git.io/normalize
==============================================================================*/

// Remove default margin.
body {
  margin: 0;
}

// give HTML5 elements a consistent default for older IEs
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

// Remove the gray background color from active links in IE 10.
a {
  background-color: transparent;
}

// Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
b,
strong {
  font-weight: bold;
}

em {
  font-style: italic;
}


// Address inconsistent and variable font size in all browsers.
small {
  font-size: 80%;
}

// Prevent `sub` and `sup` affecting `line-height` in all browsers.
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

// Remove border when inside `a` element in IE 8/9/10.
img {
  border: 0;
}

// 1. Correct color not being inherited.
//    Known issue: affects color of disabled elements.
// 2. Correct font properties not being inherited.
// 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
button,
input,
optgroup,
select,
textarea {
  color: inherit; // 1
  font: inherit; // 2
  margin: 0; // 3
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
}

// Re-set default cursor for disabled elements.
button[disabled],
html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

// 1. Address `appearance` set to `searchfield` in Safari and Chrome.
// 2. Address `box-sizing` set to `border-box` in Safari and Chrome
//    (include `-moz` to future-proof).
input[type="search"] {
  -webkit-appearance: textfield; // 1
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box; // 2
  box-sizing: content-box;
}


// Remove most spacing between table cells.
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

// Remove default vertical scrollbar in IE 8/9/10/11.
textarea {
  overflow: auto;
}

// hide outline on focus for elements which are given
// focus by javascript
[tabindex='-1']:focus {
  outline: none;
}

/*============================================================================
  #Color Variables
==============================================================================*/

// Colors
$color-primary: {{ settings.color_primary }};
$color-secondary: {{ settings.color_secondary }};

// Button colors
$color-btn-primary: $color-primary;
$color-btn-primary-hover: darken($colorBtnPrimary, 10%);
$color-btn-primary-active: darken($color-btn-primary-hover, 10%);
$color-btn-primary-text: #fff;

$color-btn-secondary: $color-secondary;
$color-btn-secondary-hover: darken($color-btn-secondary, 10%);
$color-btn-secondary-active: darken($color-btn-secondary-hover, 10%);
$color-btn-secondary-text: #fff;

// Text link colors
$color-link: $color-primary;
$color-link-hover: lighten($color-primary, 15%);

// Text colors
$color-text-body: {{ settings.color_body_text }};

// Backgrounds
$color-body: {{ settings.color_body_bg }};

// Border colors
$color-border: {{ settings.color_borders }};


// Helper colors for form error states
// $disabled-grey: ;
// $disabled-border: ;
// $error-red: ;
// $error-red-bg: ;
// $success-green: ;
// $success-green-bg: ;


/*============================================================================
  #Sizing Variables
==============================================================================*/

// Sizing variables
$width-site: 1180px;
$gutter-site: 30px;
$gutter-grid: 30px;

/*============================================================================
  #Typography Variables
==============================================================================*/

$font-stack-header: 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial, sans-serif;
$font-weight-header: 700;

$font-stack-body: 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial, sans-serif;
$font-size-base: 14px; // Henseforth known as 1em

@font-face {
  font-family: 'icons';
  src: url('{{ "icons.eot" | asset_url }}');
  src: url('{{ "icons.eot" | asset_url }}#iefix') format("embedded-opentype"),
       url('{{ "icons.woff" | asset_url }}') format("woff"),
       url('{{ "icons.ttf" | asset_url }}') format("truetype"),
       url('{{ "icons.svg" | asset_url }}#timber-icons') format("svg");
  font-weight: normal;
  font-style: normal;
}
$font-stack-social-icons: 'icons';

/*============================================================================
  #Z-Index
==============================================================================*/
$z-index-dropdown : 2;


/*============================================================================
  #Mixins and Functions
==============================================================================*/

@mixin clearfix() {
  &:after {
    content: '';
    display: table;
    clear: both; }
  *zoom: 1;
}

/*============================================================================
  Prefix mixin for generating vendor prefixes:

  Usage:
    // Input:
    .element {
      @include prefix(transform, scale(1), ms webkit spec);
    }

    // Output:
    .element {
      -ms-transform: scale(1);
      -webkit-transform: scale(1);
      transform: scale(1);
    }

  Based on https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_prefixer.scss
==============================================================================*/
@mixin prefix($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      -webkit-#{$property}: $value;
    } @else if $prefix == moz {
      -moz-#{$property}: $value;
    } @else if $prefix == ms {
      -ms-#{$property}: $value;
    } @else if $prefix == o {
      -o-#{$property}: $value;
    } @else if $prefix == spec {
      #{$property}: $value;
    } @else  {
      @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}


/*============================================================================
  Convert pixels to ems

  eg. for a relational value of 12px write em(12) when the parent is 16px
  if the parent is another value say 24px write em(12, 24)

  Based on https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/functions/_px-to-em.scss
==============================================================================*/
@function em($pxval, $base: $em-base) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($pxval / $base) * 1em;
}

/*============================================================================
  Strips the unit from a number.

  @param {Number (With Unit)} $value
  @example scss - Usage
    $dimension: strip-units(10em);
  @example css - CSS Output
    $dimension: 10;
  @return {Number (Unitless)}

  based on https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/functions/_strip-units.scss
==============================================================================*/
@function strip-units($value) {
  @return ($value / ($value * 0 + 1));
}

@mixin backface($visibility: hidden) {
  @include prefixer(backface-visiblity, $visibility, webkit spec);
}

/*============================================================================
  #Helper Classes
==============================================================================*/

.clearfix {
  @include clearfix;
}

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0; border: 0;
}

/*============================================================================
  #Lists
==============================================================================*/

ol {
  list-style: decimal;
}

.list--square {
  list-style: square outside;
}

.list--disc {
  list-style: disc outside;
}

//for ordered lists
.list--alpha {
  list-style: lower-alpha outside;
}

.list--no-bullets {
  list-style: none outside;
  margin-left: 0;
}

.list--inline {
  li {
    display: inline-block;
  }

/*============================================================================
  #Basic Styles
==============================================================================*/

body,
html {
  background-color: $color-body;
}

/*============================================================================
  #Typography
==============================================================================*/
body,
input,
textarea,
button,
select {
  font-size: $font-size-base;
  font-family: $font-stack-body;
  color: $color-text-body;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: $font-stack-header;
  font-weight: $font-weight-header;
}

/*================ Use em() Sass function to declare font-size ================*/
h1 {

}

h2 {

}

h3 {

}

h4 {

}

h5 {

}

h6 {

}


.h1 {
  @extend h1;
}

.h2 {
  @extend h2;
}

.h3 {
  @extend h3;
}

.h4 {
  @extend h4;
}

.h5 {
  @extend h5;
}

.h6 {
  @extend h6;
}


/*================ Blockquotes ================*/
blockquote {

  p {

    & + cite {
      margin-top: $gutter-site / 2;
    }
  }

  cite {
    display: block;

    &:before {
      content: '\2014 \0020';
    }
  }
}

/*================ Code ================*/
code, pre {
  font-family: Consolas,monospace;
  font-size: 1em;
}

pre {
  overflow: auto;
}

/*================ Horizontal Rules ================*/
hr {
  clear: both;
  border-top: solid $color-border;
  border-width: 1px 0 0;
  margin: $gutter-site 0;
  height: 0;
}

/*================ Section Headers ================*/
.section-header {
  margin-bottom: $gutter-site / 1.5;
}

/*============================================================================
  #RTE
==============================================================================*/

.rte {
  // Page and Blog content generated in the /admin gets a class of `.rte` wrapped
  // around it.  Add any styles you need here.  You must target elements and not
  // `.classes` or `#IDs` since the HTML is automatically generated without
}

.rte--page-header {
  // RTE content can be included as a header on some pages such as `/collection`
  // you can use this class (or a similar one) to apply specific styles
  // to any special cases of RTE content that appear in your theme.
  //
  // You must target elements and not
  // `.classes` or `#IDs` since the HTML is automatically generated without
}

// allow table to scroll for tables in the RTE since we don't know
// how many columns they will contain
.rte__table-wrapper {
  max-width: 100%;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

/*============================================================================
  #Tables
==============================================================================*/
table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
}

th {
  font-weight: bold;
}

th, td {
  text-align: left;
  border: 1px solid $color-border;
}

/*============================================================================
  Responsive tables, defined with .table on table element.
==============================================================================*/

//TODO: Update with new MQ with grid
@include at-query($max, $small) {
  .table{
      thead {
        display: none;
      }

      tr {
        display: block;
      }

      // IE9 table layout fixes
      tr,
      td {
        float: left;
        clear: both;
        width: 100%;
      }

      th,
      td {
        display: block;
        text-align: right;
        padding: $grid-gutter / 2;
      }

      td:before {
        content: attr(data-label);
        float: left;
        text-align: center;
        font-size: 12px;
        padding-right: 10px;
      }
  }

  //TODO: update to use `desktop--hide` or whatever once our grid is built
  .table--small-hide {
    display: none !important;
  }

  .table__row + .table__row {
    position: relative;
    margin-top: 10px;
    padding-top: $grid-gutter / 2;

    &:after {
      content: '';
      display: block;
      position: absolute;
      top: 0;
      left: $grid-gutter / 2;
      right: $grid-gutter / 2;
      border-bottom: 1px solid $color-border;
    }
  }
}


/*============================================================================
  #OOCSS Media Object
    - http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/
==============================================================================*/
.media,
.media-flex {
  overflow: hidden;
  _overflow: visible;
  zoom: 1;
}

.media-img {
  float: left;
}

.media-img-right {
  float: right;
}

.media-img img,
.media-img-right img {
  display: block;
}


/*============================================================================
  #Images and Iframes
==============================================================================*/
img {
  max-width: 100%;
  border: 0 none;
}

svg:not(:root) {
  overflow: hidden;
}

.video-wrapper {
  position: relative;
  overflow: hidden;
  max-width: 100%;
  padding-bottom: 56.25%;
  height: 0;
  height: auto;

  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

/*============================================================================
  Shopify Canvas
  Copyright 2015 Shopify Inc.

  Some things to know about this file:
    - Sass is compiled on Shopify's server so you don't need to convert it to CSS yourself
    - The output CSS is compressed and comments are removed
    - You cannot use @imports in this file
    - The font icons are prepared using https://icomoon.io/app
==============================================================================*/

/*============================================================================
  Table of Contents

  #Normalize
  #Variables
    *Color Variables
    *Sizing Variables
    *Typography Variables
    *Z-Index
  #Mixins and Functions
    *Clear Fix
    *Prefix
    *Em
    *Strip-units
    *Backface
    *User-select
  #Helper Classes
  #Breakpoint Variables
  #Media Query
  #Responsive Helper Mixins
    *Show/Hide Helper
    *Text Align Helper
    *Float Helper
  #Grid
    *Grid Setup
    *Reverse Grid
    *Gutterless Grid
    *Grid Columns
    *Uniform Grid
  #Basic Styles
  #Typography
    *Headings
    *Blockquotes
    *Code
    *Horizontal Rules
  #Icons
    *Fallback Text
    *Icon Mapping
  #Lists
  #Rich Text Editor
  #Links and Buttons
  #Tables
  #Reponsive Tables
  #Images and Iframes
  #Forms
    *Error States
    *Labels
  #Site Nav and Dropdowns
  #Section Headers
==============================================================================*/

/*============================================================================
  #Normalize

  Based on normalize.css v3.0.2 | MIT License | git.io/normalize
==============================================================================*/

*, *:before, *:after {
  box-sizing: border-box;
}

// Remove default margin.
body {
  margin: 0;
}

// give HTML5 elements a consistent default for older IEs
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

// Remove the gray background color from active links in IE 10.
a {
  background-color: transparent;
}

// Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
b,
strong {
  font-weight: bold;
}

em {
  font-style: italic;
}


// Address inconsistent and variable font size in all browsers.
small {
  font-size: 80%;
}

// Prevent `sub` and `sup` affecting `line-height` in all browsers.
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

// Remove border when inside `a` element in IE 8/9/10.
img {
  max-width: 100%;
  border: 0;
}

// 1. Correct color not being inherited.
//    Known issue: affects color of disabled elements.
// 2. Correct font properties not being inherited.
// 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
button,
input,
optgroup,
select,
textarea {
  color: inherit; // 1
  font: inherit; // 2
  margin: 0; // 3
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
}

// Re-set default cursor for disabled elements.
button[disabled],
html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

// 1. Address `appearance` set to `searchfield` in Safari and Chrome.
input[type="search"] {
  -webkit-appearance: textfield; // 1
}

// Remove most spacing between table cells.
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

// Remove default vertical scrollbar in IE 8/9/10/11.
textarea {
  overflow: auto;
}

// hide outline on focus for elements which are given
// focus by javascript
[tabindex='-1']:focus {
  outline: none;
}

/*============================================================================
  #Variables
==============================================================================*/

/*================ #Color Variables ================*/

$color-primary: {{ settings.color_primary }};
$color-secondary: {{ settings.color_secondary }};

// Button colors
$color-btn-primary: $color-primary;
$color-btn-primary-hover: darken($color-btn-primary, 10%);
$color-btn-primary-active: darken($color-btn-primary-hover, 10%);
$color-btn-primary-text: #fff;

$color-btn-secondary: $color-secondary;
$color-btn-secondary-hover: darken($color-btn-secondary, 10%);
$color-btn-secondary-active: darken($color-btn-secondary-hover, 10%);
$color-btn-secondary-text: #fff;

// Text link colors
$color-link: $color-primary;
$color-link-hover: lighten($color-primary, 15%);

// Text colors
$color-body-text: {{ settings.color_body_text }};

// Backgrounds
$color-body: {{ settings.color_body_bg }};

// Border colors
$color-border: {{ settings.color_borders }};

// Helper colors for form error states
$color-disabled: #000;
$color-border-disabled: #000;
$color-error: #000;
$color-error-bg: #000;
$color-success: #000;
$color-success-bg: #000;

/*================ #Sizing Variables ================*/

$width-site: 1180px;
$gutter-site: 30px;
$gutter-heading: 30px;

/*================ #Typography Variables ================*/

$font-stack-header: 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial, sans-serif;
$font-weight-header: 700;

$font-stack-body: 'HelveticaNeue', 'Helvetica Neue', Helvetica, Arial, sans-serif;
$font-size-base: 14px; // Henseforth known as 1em

@font-face {
  font-family: 'icons';
  src: url('{{ "icons.eot" | asset_url }}');
  src: url('{{ "icons.eot" | asset_url }}#iefix') format("embedded-opentype"),
       url('{{ "icons.woff" | asset_url }}') format("woff"),
       url('{{ "icons.ttf" | asset_url }}') format("truetype"),
       url('{{ "icons.svg" | asset_url }}#canvas-icons') format("svg");
  font-weight: normal;
  font-style: normal;
}

$font-stack-icons: 'icons';
$font-size-icons-social: 30px;
$font-size-icons-payment: 30px;

/*================ #Z-Index ================*/

$z-index-dropdown : 2;

/*============================================================================
  #Mixins and Functions
==============================================================================*/

/*================ #Clear Fix ================*/

@mixin clearfix() {
  &:after {
    content: '';
    display: table;
    clear: both;
  }

  *zoom: 1;
}

/*============================================================================
  Prefix mixin for generating vendor prefixes:

  Usage:
    // Input:
    .element {
      @include prefix(transform, scale(1), ms webkit spec);
    }

    // Output:
    .element {
      -ms-transform: scale(1);
      -webkit-transform: scale(1);
      transform: scale(1);
    }

  Based on https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_prefixer.scss
==============================================================================*/
@mixin prefix($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      -webkit-#{$property}: $value;
    } @else if $prefix == moz {
      -moz-#{$property}: $value;
    } @else if $prefix == ms {
      -ms-#{$property}: $value;
    } @else if $prefix == o {
      -o-#{$property}: $value;
    } @else if $prefix == spec {
      #{$property}: $value;
    } @else  {
      @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}

/*============================================================================
  Convert pixels to ems

  eg. for a relational value of 12px write em(12) when the parent is 16px
  if the parent is another value say 24px write em(12, 24)

  Based on https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/functions/_px-to-em.scss
==============================================================================*/
@function em($pxval, $base: $em-base) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  @if not unitless($base) {
    $base: strip-units($base);
  }
  @return ($pxval / $base) * 1em;
}

/*============================================================================
  Strips the unit from a number.

  @param {Number (With Unit)} $value
  @example scss - Usage
    $dimension: strip-units(10em);
  @example css - CSS Output
    $dimension: 10;
  @return {Number (Unitless)}

  based on https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/functions/_strip-units.scss
==============================================================================*/
@function strip-units($value) {
  @return ($value / ($value * 0 + 1));
}

@mixin backface($visibility: hidden) {
  @include prefix(backface-visiblity, $visibility, webkit spec);
}

@mixin user-select($value: none) {
  @include prefix('user-select', #{$value}, moz ms webkit spec);
}

/*============================================================================
  #Helper Classes
==============================================================================*/

.clearfix {
  @include clearfix();
}

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0; border: 0;
}

/*============================================================================
  #Breakpoint Variables
==============================================================================*/

// Used by the `media-query` mixin
$mobile: 'mobile';
$tablet-only: 'tablet-only';
$tablet-down: 'tablet-down';
$tablet-up: 'tablet-up';
$desktop-up: 'desktop-up';
$widescreen: 'widescreen';

/*============================================================================
  #Media Query Mixin
==============================================================================*/

@mixin media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $grid-breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @if $media-query == $name and $declaration {
      $breakpoint-found: true;

      @media only screen and #{$declaration} {
        @content;
      }
    }
  }

  @if $breakpoint-found == false {
    @warn "Breakpoint '#{$media-query}' does not exist";
  }
}

/*============================================================================
  #Responsive Helper Mixins
==============================================================================*/

/*================ Show/Hide Helper ================*/
@mixin responsive-display-helper($grid-breakpoint-type:"") {
  .show#{$grid-breakpoint-type} {
    display: block !important;
  }

  .hide#{$grid-breakpoint-type} {
    display: none !important;
  }
}

/*================ Text Alignment Helper ================*/
@mixin responsive-text-align-helper($grid-breakpoint-type:"") {
  .text-left#{$grid-breakpoint-type} {
    text-align: left !important;
  }

  .text-right#{$grid-breakpoint-type} {
    text-align: right !important;
  }

  .text-center#{$grid-breakpoint-type} {
    text-align: center !important;
  }
}

/*================ Float Helper ================*/
@mixin responsive-float-helper($grid-breakpoint-type:"") {
  .float-left#{$grid-breakpoint-type} {
    float: left !important;
  }

  .float-right#{$grid-breakpoint-type} {
    float: right !important;
  }
}

/*============================================================================
  #Grid
    - Creates a 12 column responsive grid based on the `$grid-columns` variable.
    If you want to change the number of columns, be sure to also update the
    `grid-uniform-clearfix` mixin.
    - Based on csswizardry grid, but with floated columns, a fixed gutter size,
    and BEM classes
    - `.grid--uniform` is used to take care of clearfixes on evenly sized
    `.grid__items`
==============================================================================*/

$grid-tablet: 750px;
$grid-desktop: 990px;
$grid-widescreen: 1400px;
$grid-gutter: 30px;
$grid-columns: 12;

// The `$grid-breakpoints` list is used to build our media queries. You can use
// these in the media-queries mixin or as modifiers to your grid classes to
// target specific breakpoint. i.e. `.grid-6--tablet-down` will target screen
// widths below the value set by `$grid-desktop`
$grid-breakpoints: (
  'mobile' '(max-width: #{$grid-tablet - 1})',
  'tablet-only' '(min-width: #{$grid-tablet}) and (max-width: #{$grid-desktop - 1})',
  'tablet-down' '(max-width: #{$grid-desktop - 1})',
  'tablet-up' '(min-width: #{$grid-tablet})',
  'desktop-up' '(min-width: #{$grid-desktop})',
  'widescreen' '(min-width: #{$grid-widescreen})'
);

$grid-breakpoint-types: ('mobile', 'tablet-only', 'tablet-down', 'tablet-up', 'desktop-up', 'widescreen');

/*============================================================================
  Grid Setup
    1. Allow the grid system to be used on lists.
    2. Remove any margins and paddings that might affect the grid system.
    3. Apply a negative `margin-left` to negate the columns' gutters.
==============================================================================*/
.grid,
.grid--uniform {
  @include clearfix();
}

.grid,
.grid--uniform {
  list-style: none;
  margin: 0;
  padding: 0;
  margin-left: -$grid-gutter;
}

.grid__item {
  float: left;
  padding-left: $grid-gutter;
  width: 100%;
}

/*============================================================================
  Reversed grids allow you to structure your source in the opposite
  order to how your rendered layout will appear.
==============================================================================*/
.grid--rev {
  @extend .grid;
  direction: rtl;
  text-align: left;

  > .grid__item {
    direction: ltr;
    text-align: left;
    float: right;
  }
}

/*============================================================================
  #Grid Columns
    - Create width classes with the modifiers for each breakpoint.

    - Breakpoint specific columns are generated for each breakpoint based
    on the values in `$grid-breakpoints` e.g. `.grid-3` `.grid-3--tablet-up`
==============================================================================*/
@mixin grid-column-generator($grid-columns, $grid-breakpoint-type:"") {
  @for $i from 1 through $grid-columns {
    .grid-#{$i}#{$grid-breakpoint-type} {
      width: #{percentage($i / $grid-columns)};
    }
  }
}

/*============================================================================
  #Grid Helper Mixins
==============================================================================*/

/*================ Clearfix helper on uniform grids ================*/
@mixin grid-uniform-clearfix($grid-breakpoint-type:"") {
  .grid--uniform {
    .grid-1#{$grid-breakpoint-type}:nth-child(12n+1),
    .grid-2#{$grid-breakpoint-type}:nth-child(6n+1),
    .grid-3#{$grid-breakpoint-type}:nth-child(4n+1),
    .grid-4#{$grid-breakpoint-type}:nth-child(3n+1),
    .grid-6#{$grid-breakpoint-type}:nth-child(2n+1)    { clear: both; }
  }
}


/*============================================================================
  #Build The Grid
==============================================================================*/

/*================ Base Grid Classes ================*/
@include grid-column-generator($grid-columns);
@include responsive-display-helper();

/*================ Responsive Grid classes ================*/
@each $breakpoint in $grid-breakpoint-types {
  @include media-query($breakpoint) {
    @include grid-column-generator($grid-columns, '--#{$breakpoint}');
    @include grid-uniform-clearfix('--#{$breakpoint}');
    @include responsive-display-helper('--#{$breakpoint}');
  }
}

/*============================================================================
  #Basic Styles
==============================================================================*/
body,
html {
  background-color: $color-body;
}

.page-width {
  @include clearfix();
  max-width: $width-site;
  margin: 0 auto;
  padding: 0 ($gutter-site / 2);

  @include media-query($mobile) {
    padding: 0 $gutter-site;
  }
}

.main-content {
  display: block;
  margin-top: $gutter-site;
  padding-bottom: $gutter-site * 2;
}

/*============================================================================
  #Typography
==============================================================================*/
body,
input,
textarea,
button,
select {
  font-size: $font-size-base;
  font-family: $font-stack-body;
  color: $color-body-text;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: $font-stack-header;
  font-weight: $font-weight-header;
}

/*================ Headings ================*/
h1 {

}

h2 {

}

h3 {

}

h4 {

}

h5 {

}

h6 {

}


.h1 {
  @extend h1;
}

.h2 {
  @extend h2;
}

.h3 {
  @extend h3;
}

.h4 {
  @extend h4;
}

.h5 {
  @extend h5;
}

.h6 {
  @extend h6;
}


/*================ Blockquotes ================*/
blockquote {

  p {

    & + cite {
      margin-top: $gutter-site / 2;
    }
  }

  cite {
    display: block;

    &:before {
      content: '\2014 \0020';
    }
  }
}

/*================ Code ================*/
code, pre {
  font-family: Consolas,monospace;
  font-size: 1em;
}

pre {
  overflow: auto;
}

/*================ Horizontal Rules ================*/
hr {
  clear: both;
  border-top: solid $color-border;
  border-width: 1px 0 0;
  margin: $gutter-site 0;
  height: 0;
}

/*============================================================================
  #Icons
==============================================================================*/
.icon {
  display: inline-block;

  .supports-no-fontface & {
    display: none;
  }
}

/*============================================================================
  A generic way to visually hide content while
  remaining accessible to screen readers (h5bp.com)
==============================================================================*/
.supports-fontface .icon__fallback-text {
  @extend .visually-hidden;
}

.icon:before {
  display: inline;
  font-family: $font-stack-icons;
  text-decoration: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.supports-no-fontface .icon:before {
  display: none;
}

/*================ Icon mapping ================*/
.icon-american_express:before { content: "\41"; }
.icon-arrow-down:before { content: "\e607"; }
.icon-bitcoin:before { content: "\42"; }
.icon-cart:before { content: "\e600"; }
.icon-cirrus:before { content: "\43"; }
.icon-dankort:before { content: "\64"; }
.icon-diners_club:before { content: "\63"; }
.icon-discover:before { content: "\44"; }
.icon-facebook:before { content: "\66"; }
.icon-fancy:before { content: "\46"; }
.icon-google:before { content: "\67"; }
.icon-google_wallet:before { content: "\47"; }
.icon-grid-view:before { content: "\e603"; }
.icon-hamburger:before { content: "\e601"; }
.icon-instagram:before { content: "\69"; }
.icon-interac:before { content: "\49"; }
.icon-jcb:before { content: "\4a"; }
.icon-list-view:before { content: "\e604"; }
.icon-maestro:before { content: "\6d"; }
.icon-master:before { content: "\4d"; }
.icon-minus:before { content: "\e602"; }
.icon-paypal:before { content: "\50"; }
.icon-pinterest:before { content: "\70"; }
.icon-plus:before { content: "\e605"; }
.icon-rss:before { content: "\72"; }
.icon-search:before { content: "\73"; }
.icon-stripe:before { content: "\53"; }
.icon-tumblr:before { content: "\74"; }
.icon-twitter:before { content: "\54"; }
.icon-vimeo:before { content: "\76"; }
.icon-visa:before { content: "\56"; }
.icon-x:before { content: "\e606"; }
.icon-youtube:before { content: "\79"; }

/*================ Payment Icons ================*/
.payment-icons {
  @include user-select();
  cursor: default;

  li {
    color: $color-primary;
    cursor: default;
  }

  .icon {
    font-size: $font-size-icons-payment;
  }
}

/*================ Social Icons ================*/
.social-icons li {
  @include media-query($tablet-up) {
    margin-left: 0;
  }

  .icon {
    font-size: $font-size-icons-social;
  }

}

/*============================================================================
  #Lists
==============================================================================*/
ol {
  list-style: decimal;
}

.list--square {
  list-style: square outside;
}

.list--disc {
  list-style: disc outside;
}

//for ordered lists
.list--alpha {
  list-style: lower-alpha outside;
}

.list--no-bullets {
  list-style: none outside;
  margin-left: 0;
}

.list--inline {
  padding-left: 0;

  li {
    display: inline-block;
  }
}

/*============================================================================
  #RTE
==============================================================================*/

.rte {
  // Page and Blog content generated in the /admin gets a class of `.rte` wrapped
  // around it.  Add any styles you need here.  You must target elements and not
  // `.classes` or `#IDs` since the HTML is automatically generated without
}

.rte--page-header {
  // RTE content can be included as a header on some pages such as `/collection`
  // you can use this class (or a similar one) to apply specific styles
  // to any special cases of RTE content that appear in your theme.
  //
  // You must target elements and not
  // `.classes` or `#IDs` since the HTML is automatically generated without
}

// allow table to scroll for tables in the RTE since we don't know
// how many columns they will contain
.rte__table-wrapper {
  max-width: 100%;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}


/*============================================================================
  #Links and Buttons
==============================================================================*/
a {
  color: $color-link;

  &:hover,
  &:focus {
    color: $color-link-hover;
  }
}

/*================ Force an input/button to look like a text link ================*/
.text-link {
  display: inline;
  border: 0 none;
  background: none;
  padding: 0;
  margin: 0;
}

.btn,
.rte .btn {
  display: inline-block;
  width: auto;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  white-space: nowrap;
  cursor: pointer;
  border: 1px solid transparent;
  @include user-select();
  @include prefix(appearance, none, webkit moz spec);

  // Set primary button colors - can override later
  background-color: $color-btn-primary;
  color: $color-btn-primary-text;

  &:hover {
    background-color: $color-btn-primary-hover;
    color: $color-btn-primary-text;
  }

  &:active,
  &:focus {
   background-color: $color-btn-primary-active;
   color: $color-btn-primary-text;
  }

  &[disabled],
  &.btn--disabled {
    cursor: default;
    color: $color-border-disabled;
    background-color: $color-disabled;
  }
}

.btn--secondary,
.rte .btn--secondary {
  @extend .btn;
  background-color: $color-btn-secondary;

  &:hover {
    background-color: $color-btn-secondary-hover;
    color: $color-btn-secondary-text;
  }

  &:active,
  &:focus {
   background-color: $color-btn-secondary-active;
   color: $color-btn-secondary-text;
  }
}

/*============================================================================
  #Tables
==============================================================================*/
table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
}

th {
  font-weight: bold;
}

th, td {
  text-align: left;
  border: 1px solid $color-border;
}

/*============================================================================
  Responsive tables, defined with .table on table element.
==============================================================================*/

@include media-query($mobile) {
  .table{
    thead {
      display: none;
    }

    tr {
      display: block;
    }

    // IE9 table layout fixes
    tr,
    td {
      float: left;
      clear: both;
      width: 100%;
    }

    th,
    td {
      display: block;
      text-align: right;
      padding: $gutter-site / 2;
    }

    td:before {
      content: attr(data-label);
      float: left;
      text-align: center;
      font-size: 12px;
      padding-right: 10px;
    }
  }

  .table__row + .table__row {
    position: relative;
    margin-top: 10px;
    padding-top: $gutter-site / 2;

    &:after {
      content: '';
      display: block;
      position: absolute;
      top: 0;
      left: $gutter-site / 2;
      right: $gutter-site / 2;
      border-bottom: 1px solid $color-border;
    }
  }
}

/*============================================================================
  #Images and Iframes
==============================================================================*/

svg:not(:root) {
  overflow: hidden;
}

.video-wrapper {
  position: relative;
  overflow: hidden;
  max-width: 100%;
  padding-bottom: 56.25%;
  height: 0;
  height: auto;

  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

/*============================================================================
  #Forms
==============================================================================*/

// Prevent zoom on touch devices in active inputs
@include media-query($tablet-down) {
  input,
  textarea {
    font-size: 16px;
  }
}

fieldset {
  border: 1px solid $color-border;
  padding: $gutter-site / 2;
}

legend {
  border: 0;
  padding: 0;
}

button,
input[type="submit"] {
  cursor: pointer;
}

input,
textarea,
select {
  border: 1px solid $color-border;
  max-width: 100%;

  &:focus {
    border: 1px solid darken($color-border, 10%);
  }

  &[disabled] {
    cursor: default;
    background-color: $color-disabled;
    border-color: $color-border-disabled;
  }
}

textarea {
  min-height: 100px;
}

/*================ Error styles ================*/
input,
select,
textarea {
  &.error {
    border-color: $color-error;
    background-color: $color-error-bg;
    color: $color-error;
  }
}

label.error {
  color: $color-error;
}

select {
  @include prefix(appearance, none, webkit moz spec);
  background-position: right center;
  background: {
    image: url('{{ "ico-select.svg" | asset_url }}');
    repeat: no-repeat;
    position: right 10px center;
    color: transparent;
  }
  padding-right: 28px;
  text-indent: 0.01px;
  text-overflow: '';
  cursor: pointer;

  /*================ Hide the svg arrow in IE9 and below ================*/
  .ie9 &,
  .lt-ie9 & {
    padding-right: 10px;
    background-image: none;
  }
}

optgroup {
  font-weight: bold;
}

// Force option color (affects IE only)
option {
  color: #000;
  background-color: #fff;
}

select::-ms-expand {
  display: none;
}

/*================ Form labels ================*/
.hidden-label {
  position: absolute;
  height: 0;
  width: 0;
  margin-bottom: 0;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);

  // No placeholders, so force show labels
  .ie9 &,
  .lt-ie9 & {
    position: static;
    height: auto;
    width: auto;
    margin-bottom: 2px;
    overflow: visible;
    clip: initial;
  }
}

label[for] {
  cursor: pointer;
}

/*============================================================================
  #Site Nav and Dropdowns
==============================================================================*/

.site-nav {

  li {
    display: inline-block;
  }
}

/*================ Site Nav Links ================*/
.site-nav__link {
  display: block;
  white-space: nowrap;

  .icon-arrow-down {
    position: relative;
  }

  .site-nav--active > & {
  }
}

/*================ Dropdowns ================*/
.site-nav--has-dropdown {
  position: relative;
}

.site-nav__dropdown {
  display: none;
  position: absolute;
  left: 0;
  padding: 0;
  margin: 0;
  z-index: $z-index-dropdown;

  .supports-no-touch .site-nav--has-dropdown:hover &,
  .site-nav--has-dropdown.nav-hover &,
  .nav-focus + & {
    display: block;
  }

  li {
    display: block;
  }
}

/*============================================================================
  #Section Headers
==============================================================================*/
.section-header {
  margin-bottom: $gutter-heading;
}

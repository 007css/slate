/*============================================================================
  Canvas Table of Contents

  #Mixins
  #Grid
  #Normalize
  #Helper Classes
  #Basic Styles
  #Icons
  #Lists
  #Rich Text Editor
  #Links and Buttons
  #Tables
  #Reponsive Tables
  #Images and Iframes
  #Forms
  #Site Nav and Dropdowns
  #Section Headers
  #Password Template
  #Giftcard Template
==============================================================================*/

/*================ #Mixins ================*/
@mixin clearfix() {
  &:after {
    content: '';
    display: table;
    clear: both;
  }

  *zoom: 1;
}

/*============================================================================
  Prefix mixin for generating vendor prefixes.
  Based on https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_prefixer.scss

  Usage:
    // Input:
    .element {
      @include prefix(transform, scale(1), ms webkit spec);
    }

    // Output:
    .element {
      -ms-transform: scale(1);
      -webkit-transform: scale(1);
      transform: scale(1);
    }
==============================================================================*/
@mixin prefix($property, $value, $prefixes) {
  @each $prefix in $prefixes {
    @if $prefix == webkit {
      -webkit-#{$property}: $value;
    } @else if $prefix == moz {
      -moz-#{$property}: $value;
    } @else if $prefix == ms {
      -ms-#{$property}: $value;
    } @else if $prefix == o {
      -o-#{$property}: $value;
    } @else if $prefix == spec {
      #{$property}: $value;
    } @else  {
      @warn "Unrecognized prefix: #{$prefix}";
    }
  }
}

@mixin user-select($value: none) {
  @include prefix('user-select', #{$value}, moz ms webkit spec);
}

/*================ Media Query Mixin ================*/
@mixin media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $grid-breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @if $media-query == $name and $declaration {
      $breakpoint-found: true;

      @media only screen and #{$declaration} {
        @content;
      }
    }
  }

  @if $breakpoint-found == false {
    @warn "Breakpoint '#{$media-query}' does not exist";
  }
}

/*================ Responsive Show/Hide Helper ================*/
@mixin responsive-display-helper($grid-breakpoint-type:"") {
  .#{$grid-breakpoint-type}show {
    display: block !important;
  }

  .#{$grid-breakpoint-type}hide {
    display: none !important;
  }
}

/*================ Responsive Text Alignment Helper ================*/
@mixin responsive-text-align-helper($grid-breakpoint-type:"") {
  .#{$grid-breakpoint-type}text-left {
    text-align: left !important;
  }

  .#{$grid-breakpoint-type}text-right {
    text-align: right !important;
  }

  .#{$grid-breakpoint-type}text-center {
    text-align: center !important;
  }
}

/*============================================================================
  #Grid
==============================================================================*/

// The `$grid-breakpoints` list is used to build our media queries.
// You can use these in the media-query mixin.
$grid-breakpoints: (
  $small '(max-width: #{$grid-medium - 1})',
  $medium '(min-width: #{$grid-medium}) and (max-width: #{$grid-large - 1})',
  $medium-down '(max-width: #{$grid-large - 1})',
  $medium-up '(min-width: #{$grid-medium})',
  $large '(min-width: #{$grid-large}) and (max-width: #{$grid-widescreen - 1})',
  $large-down '(max-width: #{$grid-widescreen - 1})',
  $large-up '(min-width: #{$grid-large})',
  $widescreen '(min-width: #{$grid-widescreen})'
);

/*============================================================================
  Grid Setup
    1. Allow the grid system to be used on lists.
    2. Remove any margins and paddings that might affect the grid system.
    3. Apply a negative `margin-left` to negate the columns' gutters.
==============================================================================*/
.grid {
  @include clearfix();
}

.grid {
  list-style: none;
  margin: 0;
  padding: 0;
  margin-left: -$grid-gutter;
}

.grid__item {
  float: left;
  padding-left: $grid-gutter;
  width: 100%;
}

.grid__item[class*="--push"] {
  position:relative;
}

/*============================================================================
  Reversed grids allow you to structure your source in the opposite
  order to how your rendered layout will appear.
==============================================================================*/
.grid--rev {
  direction: rtl;
  text-align: left;

  > .grid__item {
    direction: ltr;
    text-align: left;
    float: right;
  }
}

/*============================================================================
  Grid Columns
    - Create width classes, prepended by the breakpoint name.
==============================================================================*/
@mixin grid-column-generator($grid-breakpoint-type:"") {
  /** Whole */
  .#{$grid-breakpoint-type}one-whole       { width: 100%; }

  /* Halves */
  .#{$grid-breakpoint-type}one-half        { width: percentage(1/2); }

  /* Thirds */
  .#{$grid-breakpoint-type}one-third       { width: percentage(1/3); }
  .#{$grid-breakpoint-type}two-thirds      { width: percentage(2/3); }

  /* Quarters */
  .#{$grid-breakpoint-type}one-quarter     { width: percentage(1/4); }
  .#{$grid-breakpoint-type}two-quarters    { width: percentage(2/4); }
  .#{$grid-breakpoint-type}three-quarters  { width: percentage(3/4); }

  /* Fifths */
  .#{$grid-breakpoint-type}one-fifth       { width: percentage(1/5); }
  .#{$grid-breakpoint-type}two-fifths      { width: percentage(2/5); }
  .#{$grid-breakpoint-type}three-fifths    { width: percentage(3/5); }
  .#{$grid-breakpoint-type}four-fifths     { width: percentage(4/5); }

  /* Sixths */
  .#{$grid-breakpoint-type}one-sixth       { width: percentage(1/6); }
  .#{$grid-breakpoint-type}two-sixths      { width: percentage(2/6); }
  .#{$grid-breakpoint-type}three-sixths    { width: percentage(3/6); }
  .#{$grid-breakpoint-type}four-sixths     { width: percentage(4/6); }
  .#{$grid-breakpoint-type}five-sixths     { width: percentage(5/6); }

  /* Eighths */
  .#{$grid-breakpoint-type}one-eighth      { width: percentage(1/8); }
  .#{$grid-breakpoint-type}two-eighths     { width: percentage(2/8); }
  .#{$grid-breakpoint-type}three-eighths   { width: percentage(3/8); }
  .#{$grid-breakpoint-type}four-eighths    { width: percentage(4/8); }
  .#{$grid-breakpoint-type}five-eighths    { width: percentage(5/8); }
  .#{$grid-breakpoint-type}six-eighths     { width: percentage(6/8); }
  .#{$grid-breakpoint-type}seven-eighths   { width: percentage(7/8); }

  /* Tenths */
  .#{$grid-breakpoint-type}one-tenth       { width: percentage(1/10); }
  .#{$grid-breakpoint-type}two-tenths      { width: percentage(2/10); }
  .#{$grid-breakpoint-type}three-tenths    { width: percentage(3/10); }
  .#{$grid-breakpoint-type}four-tenths     { width: percentage(4/10); }
  .#{$grid-breakpoint-type}five-tenths     { width: percentage(5/10); }
  .#{$grid-breakpoint-type}six-tenths      { width: percentage(6/10); }
  .#{$grid-breakpoint-type}seven-tenths    { width: percentage(7/10); }
  .#{$grid-breakpoint-type}eight-tenths    { width: percentage(8/10); }
  .#{$grid-breakpoint-type}nine-tenths     { width: percentage(9/10); }

  /* Twelfths */
  .#{$grid-breakpoint-type}one-twelfth     { width: percentage(1/12); }
  .#{$grid-breakpoint-type}two-twelfths    { width: percentage(2/12); }
  .#{$grid-breakpoint-type}three-twelfths  { width: percentage(3/12); }
  .#{$grid-breakpoint-type}four-twelfths   { width: percentage(4/12); }
  .#{$grid-breakpoint-type}five-twelfths   { width: percentage(5/12); }
  .#{$grid-breakpoint-type}six-twelfths    { width: percentage(6/12); }
  .#{$grid-breakpoint-type}seven-twelfths  { width: percentage(7/12); }
  .#{$grid-breakpoint-type}eight-twelfths  { width: percentage(8/12); }
  .#{$grid-breakpoint-type}nine-twelfths   { width: percentage(9/12); }
  .#{$grid-breakpoint-type}ten-twelfths    { width: percentage(10/12); }
  .#{$grid-breakpoint-type}eleven-twelfths { width: percentage(11/12); }
}

/*================ Grid push classes ================*/
@mixin grid-push-generator($grid-breakpoint-type:"") {
  /* Halves */
  .#{$grid-breakpoint-type}push-one-half        { left: percentage(1/2); }

  /* Thirds */
  .#{$grid-breakpoint-type}push-one-third       { left: percentage(1/3); }
  .#{$grid-breakpoint-type}push-two-thirds      { left: percentage(2/3); }

  /* Quarters */
  .#{$grid-breakpoint-type}push-one-quarter     { left: percentage(1/4); }
  .#{$grid-breakpoint-type}push-two-quarters    { left: percentage(2/4); }
  .#{$grid-breakpoint-type}push-three-quarters  { left: percentage(3/4); }

  /* Fifths */
  .#{$grid-breakpoint-type}push-one-fifth       { left: percentage(1/5); }
  .#{$grid-breakpoint-type}push-two-fifths      { left: percentage(2/5); }
  .#{$grid-breakpoint-type}push-three-fifths    { left: percentage(3/5); }
  .#{$grid-breakpoint-type}push-four-fifths     { left: percentage(4/5); }

  /* Sixths */
  .#{$grid-breakpoint-type}push-one-sixth       { left: percentage(1/6); }
  .#{$grid-breakpoint-type}push-two-sixths      { left: percentage(2/6); }
  .#{$grid-breakpoint-type}push-three-sixths    { left: percentage(3/6); }
  .#{$grid-breakpoint-type}push-four-sixths     { left: percentage(4/6); }
  .#{$grid-breakpoint-type}push-five-sixths     { left: percentage(5/6); }

  /* Eighths */
  .#{$grid-breakpoint-type}push-one-eighth      { left: percentage(1/8); }
  .#{$grid-breakpoint-type}push-two-eighths     { left: percentage(2/8); }
  .#{$grid-breakpoint-type}push-three-eighths   { left: percentage(3/8); }
  .#{$grid-breakpoint-type}push-four-eighths    { left: percentage(4/8); }
  .#{$grid-breakpoint-type}push-five-eighths    { left: percentage(5/8); }
  .#{$grid-breakpoint-type}push-six-eighths     { left: percentage(6/8); }
  .#{$grid-breakpoint-type}push-seven-eighths   { left: percentage(7/8); }

  /* Tenths */
  .#{$grid-breakpoint-type}push-one-tenth       { left: percentage(1/10); }
  .#{$grid-breakpoint-type}push-two-tenths      { left: percentage(2/10); }
  .#{$grid-breakpoint-type}push-three-tenths    { left: percentage(3/10); }
  .#{$grid-breakpoint-type}push-four-tenths     { left: percentage(4/10); }
  .#{$grid-breakpoint-type}push-five-tenths     { left: percentage(5/10); }
  .#{$grid-breakpoint-type}push-six-tenths      { left: percentage(6/10); }
  .#{$grid-breakpoint-type}push-seven-tenths    { left: percentage(7/10); }
  .#{$grid-breakpoint-type}push-eight-tenths    { left: percentage(8/10); }
  .#{$grid-breakpoint-type}push-nine-tenths     { left: percentage(9/10); }

  /* Twelfths */
  .#{$grid-breakpoint-type}push-one-twelfth     { left: percentage(1/12); }
  .#{$grid-breakpoint-type}push-two-twelfths    { left: percentage(2/12); }
  .#{$grid-breakpoint-type}push-three-twelfths  { left: percentage(3/12); }
  .#{$grid-breakpoint-type}push-four-twelfths   { left: percentage(4/12); }
  .#{$grid-breakpoint-type}push-five-twelfths   { left: percentage(5/12); }
  .#{$grid-breakpoint-type}push-six-twelfths    { left: percentage(6/12); }
  .#{$grid-breakpoint-type}push-seven-twelfths  { left: percentage(7/12); }
  .#{$grid-breakpoint-type}push-eight-twelfths  { left: percentage(8/12); }
  .#{$grid-breakpoint-type}push-nine-twelfths   { left: percentage(9/12); }
  .#{$grid-breakpoint-type}push-ten-twelfths    { left: percentage(10/12); }
  .#{$grid-breakpoint-type}push-eleven-twelfths { left: percentage(11/12); }
}

/*================ Clearfix helper on uniform grids ================*/
@mixin grid-uniform-clearfix($grid-breakpoint-type:"") {
  .grid--uniform {
    .#{$grid-breakpoint-type}one-half:nth-child(2n+1),
    .#{$grid-breakpoint-type}one-third:nth-child(3n+1),
    .#{$grid-breakpoint-type}one-quarter:nth-child(4n+1),
    .#{$grid-breakpoint-type}one-fifth:nth-child(5n+1),
    .#{$grid-breakpoint-type}one-sixth:nth-child(6n+1),
    .#{$grid-breakpoint-type}two-sixths:nth-child(3n+1),
    .#{$grid-breakpoint-type}three-sixths:nth-child(2n+1),
    .#{$grid-breakpoint-type}two-eighths:nth-child(4n+1),
    .#{$grid-breakpoint-type}four-eighths:nth-child(2n+1),
    .#{$grid-breakpoint-type}five-tenths:nth-child(2n+1),
    .#{$grid-breakpoint-type}one-twelfth:nth-child(12n+1),
    .#{$grid-breakpoint-type}two-twelfths:nth-child(6n+1),
    .#{$grid-breakpoint-type}three-twelfths:nth-child(4n+1),
    .#{$grid-breakpoint-type}four-twelfths:nth-child(3n+1),
    .#{$grid-breakpoint-type}six-twelfths:nth-child(2n+1)    { clear: both; }
  }
}

/*================ Build Base Grid Classes ================*/
@include grid-column-generator();
@include responsive-display-helper();
@include responsive-text-align-helper();

/*================ Build Responsive Grid Classes ================*/
@each $breakpoint in $grid-breakpoint-has-widths {
  @include media-query($breakpoint) {
    @include grid-column-generator('#{$breakpoint}--');
    @include grid-uniform-clearfix('#{$breakpoint}--');
    @include responsive-display-helper('#{$breakpoint}--');
    @include responsive-text-align-helper('#{$breakpoint}--');
  }
}

/*================ Build Grid Push Classes ================*/
@each $breakpoint in $grid-breakpoint-has-push {
  @include media-query($breakpoint) {
    @include grid-push-generator('#{$breakpoint}--');
  }
}

/*============================================================================
  #Normalize
  Based on normalize.css v3.0.2 | MIT License | git.io/normalize
==============================================================================*/
*, *:before, *:after {
  box-sizing: border-box;
}

body {
  margin: 0;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

body,
input,
textarea,
button,
select {
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: 100%;
}

a {
  background-color: transparent;
}

b,
strong {
  font-weight: $font-weight-bold;
}

em {
  font-style: italic;
}


small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

img {
  max-width: 100%;
  border: 0;
}

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}

button[disabled],
html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input[type="search"] {
  -webkit-appearance: none;
  -moz-appearance: none;
}

table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

textarea {
  overflow: auto;
  -webkit-appearance: none;
  -moz-appearance: none;
}

// hide outline on focus for elements which are given focus by JS
[tabindex='-1']:focus {
  outline: none;
}

/*================ #Helper Classes ================*/
.clearfix {
  @include clearfix();
}

.visually-hidden {
  position: absolute !important;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

/*================ #Basic Styles ================*/
body,
html {
  background-color: $color-body;
}

.page-width {
  @include clearfix();
  max-width: $width-site;
  margin: 0 auto;
}

.main-content {
  display: block;
}

/*================ Typography ================*/
blockquote {
  p {

    & + cite {
      margin-top: $gutter-site / 2;
    }
  }

  cite {
    display: block;

    &:before {
      content: '\2014 \0020';
    }
  }
}

code, pre {
  font-family: Consolas, monospace;
  font-size: 1em;
}

pre {
  overflow: auto;
}

/*================ #Icons ================*/
.icon {
  display: inline-block;

  .supports-no-fontface & {
    display: none;
  }
}

/*============================================================================
  A generic way to visually hide content while
  remaining accessible to screen readers (h5bp.com)
==============================================================================*/
.supports-fontface .icon__fallback-text {
  @extend .visually-hidden;
}

.icon:before {
  display: inline;
  font-family: $font-stack-icons;
  text-decoration: none;
  font-style: normal;
  font-weight: $font-weight-normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.supports-no-fontface .icon:before {
  display: none;
}

/*================ #Icon mapping ================*/
.icon-amazon_payments:before { content: "\e800"; }
.icon-american_express:before { content: "\41"; }
.icon-arrow-down:before { content: "\e607"; }
.icon-bitcoin:before { content: "\42"; }
.icon-cart:before { content: "\e600"; }
.icon-cirrus:before { content: "\43"; }
.icon-dankort:before { content: "\64"; }
.icon-diners_club:before { content: "\63"; }
.icon-discover:before { content: "\44"; }
.icon-facebook:before { content: "\66"; }
.icon-fancy:before { content: "\46"; }
.icon-google:before { content: "\67"; }
.icon-google_wallet:before { content: "\47"; }
.icon-grid-view:before { content: "\e603"; }
.icon-hamburger:before { content: "\e601"; }
.icon-instagram:before { content: "\69"; }
.icon-interac:before { content: "\49"; }
.icon-jcb:before { content: "\4a"; }
.icon-list-view:before { content: "\e604"; }
.icon-maestro:before { content: "\6d"; }
.icon-master:before { content: "\4d"; }
.icon-minus:before { content: "\e602"; }
.icon-paypal:before { content: "\50"; }
.icon-pinterest:before { content: "\70"; }
.icon-plus:before { content: "\e605"; }
.icon-rss:before { content: "\72"; }
.icon-search:before { content: "\73"; }
.icon-stripe:before { content: "\53"; }
.icon-tumblr:before { content: "\74"; }
.icon-twitter:before { content: "\54"; }
.icon-vimeo:before { content: "\76"; }
.icon-visa:before { content: "\56"; }
.icon-x:before { content: "\e606"; }
.icon-youtube:before { content: "\79"; }

/*================ Payment Icons ================*/
.payment-icons {
  @include user-select();
  cursor: default;

  .icon {
    font-size: $font-size-icons-payment;
  }
}

/*================ Social Icons ================*/
.social-icons .icon {
  font-size: $font-size-icons-social;
}

/*================ #Lists ================*/
ul, ol {
  margin: 0;
  padding: 0;
}

ol {
  list-style: decimal;
}

.list--inline {
  padding: 0;
  margin: 0;

  li {
    display: inline-block;
    margin-bottom: 0;
  }
}

.rte {
  ul,
  ol {
    margin: 0 0 ($gutter-site / 2) $gutter-site;
  }

  ul {
    list-style: disc outside;

    ul {
      list-style: circle outside;

      ul {
        list-style: square outside;
      }
    }
  }
}

.text-center.rte,
.text-center .rte {
  ul,
  ol {
    margin-left: 0;
    list-style-position: inside;
  }
}

/*================ #Rich Text Editor ================*/

// allow table to scroll for tables in the RTE since we don't know
// how many columns they will contain. Class added by JS.
.rte__table-wrapper {
  max-width: 100%;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

.rte {
  img {
    height: auto;
  }

  table {
    table-layout: fixed;
  }
}

/*================ #Links and Buttons ================*/
.btn,
.rte .btn {
  display: inline-block;
  width: auto;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  white-space: nowrap;
  cursor: pointer;
  border: 1px solid transparent;
  @include user-select();
  @include prefix(appearance, none, webkit moz spec);

  // Set primary button colors - can override later
  background-color: $color-btn-primary;
  color: $color-btn-primary-text;
}

.btn--secondary,
.rte .btn--secondary {
  @extend .btn;
  background-color: $color-btn-secondary;
  color: $color-btn-secondary-text;
}

/*================ Force an input/button to look like a text link ================*/
.text-link {
  display: inline;
  border: 0 none;
  background: none;
  padding: 0;
  margin: 0;
}

/*================ #Tables ================*/
th {
  font-weight: $font-weight-bold;
}

th, td {
  text-align: left;
  border: 1px solid $color-border;
}

/*============================================================================
  Responsive tables, defined with .responsive-table on table element.
==============================================================================*/
@include media-query($small) {
  .responsive-table{
    thead {
      display: none;
    }

    tr {
      display: block;
    }

    // IE9 table layout fixes
    tr,
    td {
      float: left;
      clear: both;
      width: 100%;
    }

    th,
    td {
      display: block;
      text-align: right;
      padding: $gutter-site / 2;
      margin: 0;
    }

    td:before {
      content: attr(data-label);
      float: left;
      text-align: center;
      padding-right: 10px;
    }
  }

  .responsive-table__row + .responsive-table__row,
  tfoot > .responsive-table__row:first-child {
    position: relative;
    margin-top: 10px;
    padding-top: $gutter-site / 2;

    &:after {
      content: '';
      display: block;
      position: absolute;
      top: 0;
      left: $gutter-site / 2;
      right: $gutter-site / 2;
      border-bottom: 1px solid $color-border;
    }
  }
}

/*================ #Images and Iframes ================*/
svg:not(:root) {
  overflow: hidden;
}

.video-wrapper {
  position: relative;
  overflow: hidden;
  max-width: 100%;
  padding-bottom: 56.25%;
  height: 0;
  height: auto;

  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

/*================ Forms ================*/

// Prevent zoom on touch devices in active inputs
@include media-query($medium-down) {
  input,
  textarea,
  select {
    font-size: 16px;
  }
}

fieldset {
  border: 1px solid $color-border;
  margin: 0 0 $gutter-site;
  padding: $gutter-site / 2;
}

legend {
  border: 0;
  padding: 0;
}

button,
input[type="submit"] {
  cursor: pointer;
}

input,
textarea,
select {
  border: 1px solid $color-border;
  border-radius: 0;
  max-width: 100%;

  &:focus {
    border-color: darken($color-border, 10%);
  }

  &[disabled] {
    cursor: default;
    background-color: $color-disabled;
    border-color: $color-disabled-border;
  }
}

textarea {
  min-height: 100px;
}

/*================ Error styles ================*/
input,
select,
textarea {
  &.input--error {
    border-color: $color-error;
    background-color: $color-error-bg;
    color: $color-error;
  }
}

select {
  @include prefix(appearance, none, webkit moz spec);
  background-position: right center;
  background: {
    image: url('{{ "ico-select.svg" | asset_url }}');
    repeat: no-repeat;
    position: right 10px center;
    color: transparent;
  }
  padding-right: 28px;
  text-indent: 0.01px;
  text-overflow: '';
  cursor: pointer;

  /*================ Hide the svg arrow in IE9 and below ================*/
  .ie9 &,
  .lt-ie9 & {
    padding-right: 10px;
    background-image: none;
  }
}

optgroup {
  font-weight: $font-weight-bold;
}

// Force option color (affects IE only)
option {
  color: #000;
  background-color: #fff;
}

select::-ms-expand {
  display: none;
}

/*================ Form labels ================*/
.label--hidden {
  position: absolute;
  height: 0;
  width: 0;
  margin-bottom: 0;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);

  // No placeholders, so force show labels
  .ie9 &,
  .lt-ie9 & {
    position: static;
    height: auto;
    width: auto;
    margin-bottom: 2px;
    overflow: visible;
    clip: initial;
  }
}

label[for] {
  cursor: pointer;
}

/*================ #Site Nav and Dropdowns ================*/
.site-header__logo {
  img {
    display: block;
    max-width: $logo-max-width;
  }
}

.site-nav {

  li {
    display: inline-block;
  }
}

/*================ Site Nav Links ================*/
.site-nav__link {
  display: block;
  white-space: nowrap;

  .icon-arrow-down {
    position: relative;
  }
}

/*================ Dropdowns ================*/
.site-nav--has-dropdown {
  position: relative;
}

.site-nav__dropdown {
  display: none;
  position: absolute;
  left: 0;
  padding: 0;
  margin: 0;
  z-index: $z-index-dropdown;

  .supports-no-touch .site-nav--has-dropdown:hover &,
  .site-nav--has-dropdown.nav-hover &,
  .nav-focus + & {
    display: block;
  }

  li {
    display: block;
  }
}

/*================ #Section Headers ================*/
.section-header {
  margin-bottom: $gutter-heading;
}

/*================ #Password Template ================*/
.shopify-logo-svg {
  width: 1.5 * $font-size-base * 120 / 35;
  height: 1.5 * $font-size-base;
  display: inline-block;
  line-height: 0;
  vertical-align: middle;

  path {
    fill: currentColor;
  }
}

/*================ #Giftcard Template ================*/
.giftcard__qr-code {
  img {
    margin: 0 auto;
  }
}

.giftcard__apple-wallet-image {
  display: block;
  margin: 0 auto;
}

.giftcard__wrap {
  margin: 0 auto $gutter-site;
}

/*================ Print Giftcard Styles ================*/
@media print {
  @page {
    margin: 0.5cm;
  }

  p {
    orphans: 3;
    widows: 3;
  }

  html, body {
    background-color: #fff;
    color: #000;
  }

  .giftcard__print-link,
  .giftcard__apple-wallet {
    display: none;
  }
}
